FROM node:16-alpine AS builder
ENV NODE_ENV production

# Setup buildtime environment variables
ARG ENVIRONMENT=${ENVIRONMENT}
ENV ENVIRONMENT=${ENVIRONMENT}
ARG SENTRY_SUPPRESS_TURBOPACK_WARNING=${SENTRY_SUPPRESS_TURBOPACK_WARNING}
ENV SENTRY_SUPPRESS_TURBOPACK_WARNING=${SENTRY_SUPPRESS_TURBOPACK_WARNING}
ARG NEXT_PUBLIC_NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_SENTRY_DSN}
ENV NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
ARG NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
ENV NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
ARG NEXT_PUBLIC_PROJECT_NAME=${NEXT_PUBLIC_PROJECT_NAME}
ENV NEXT_PUBLIC_PROJECT_NAME=${NEXT_PUBLIC_PROJECT_NAME}

# Add a work directory
WORKDIR /app

# Cache and Install dependencies
COPY package.json .
COPY yarn.lock .
RUN yarn install --production

# Copy app files
COPY . .

# Build the app
RUN yarn build

# Bundle static assets with nginx
FROM nginx:1.23-alpine as production
ENV NODE_ENV production

# Copy built assets from builder
COPY --from=builder /app/dist /etc/nginx/html

# Add your nginx.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
